####################################################################
#  Install/Setup Redis
####################################################################
- name: Install/Setup Redis
  package:
    name: '{{ item }}'
    state: latest
  with_items:
    - redis

- name: Start redis service
  service:
    name: redis.service
    state: restarted
    enabled: yes

####################################################################
#  Install/Setup Docker
####################################################################
- name: Ensure old versions of Docker are not installed.
  package:
    name: '{{ item }}'
    state: absent
  with_items:
    - docker
    - docker-common
    - docker-engine

- name: Add Docker GPG key.
  rpm_key:
    key: https://download.docker.com/linux/centos/gpg
    state: present

- name: Add Docker repository.
  get_url:
    url: "https://download.docker.com/linux/centos/docker-ce.repo"
    dest: '/etc/yum.repos.d/docker-ce.repo'
    owner: root
    group: root
    mode: 0644

- name: Install Docker
  package:
    name: '{{ item }}'
    state: latest
  with_items:
    - docker-ce
    - python-pip

- name: Install docker-py
  pip:
    name: '{{ item }}'
  with_items:
    - docker-py

- name: Ensure Docker is started and enabled at boot.
  service:
    name: docker
    state: started
    enabled: yes

####################################################################
# Install/Setup MySQL
# KOLIDE ONLY WORKS WITH MYSQL 5.7
####################################################################
- name: Create MySQL Docker container
  docker_container:
    name: mysql
    image: mysql:5.7
    command: mysqld --datadir=/tmp/mysqldata
    env:
      MYSQL_ROOT_PASSWORD: '{{ mysql_root_password }}'
      MYSQL_DATABASE: '{{ mysql_kolide_dbname }}'
      MYSQL_USER: '{{ mysql_kolide_user }}'
      MYSQL_PASSWORD: '{{ mysql_kolide_pass }}'
    volumes:
      - ./mysqldata:/srv/mysql.data
    ports:
      - "3306:3306"
    restart_policy: always

####################################################################
#  Setup Kolide database
####################################################################
- name: Create Kolide database
  shell: mysql -u {{ mysql_root_user }} --password={{ mysql_root_password }} -e "CREATE DATABASE {{ mysql_kolide_dbname }};"
  ignore_errors: yes
  register: mysql_result
  failed_when: "'database exists' in mysql_result.stdout"

- name: Create Kolide database user
  mysql_user:
    name: '{{ mysql_kolide_user }}'
    password: '{{ mysql_kolide_pass }}'
    priv: '{{ mysql_kolide_dbname }}.*:ALL'
    state: present
    login_user: '{{ mysql_root_user }}'
    login_password: '{{ mysql_root_password }}'
    host: '{{ mysql_kolide_hosts }}'
  ignore_errors: yes

####################################################################
#  Install/Setup Kolide
####################################################################
- name: Create Kolide user
  user:
    name: kolide
    shell: /usr/sbin/nologin
    
- name: Create Kolide log directory
  file:
    path: '/var/log/kolide'
    state: directory
    owner: kolide
    group: root

- name: Create Kolide conf directory
  file:
    path: /etc/kolide
    state: directory
    owner: root
    group: root

- name: Copy Kolide conf
  template:
    src: templates/kolide/kolide.yml
    dest: /etc/kolide/kolide.yml
    owner: root
    group: root

- name: Install unzip
  package:
    name: unzip
    state: latest

- name: Download Kolide
  unarchive:
    src: https://dl.kolide.co/bin/fleet_latest.zip
    dest: /usr/local/bin
    remote_src: yes

- name: Intialize Kolide database
  shell: /usr/local/bin/linux/fleet_linux_amd64 prepare db --config /etc/kolide/kolide.yml

- name: Create kolide user
  user:
    name: kolide
    shell: /usr/sbin/nologin

- name: Copy Kolide SystemD
  template:
    src: templates/kolide/kolide.service
    dest: /etc/systemd/system/kolide.service

- name: Start Kolide service
  service:
    name: kolide
    state: restarted
    enabled: yes

####################################################################
# Install/Setup Nginx
####################################################################
- name: Copy nginx_kolide.conf
  template:
    src: templates/nginx/nginx_kolide.conf
    dest: /etc/nginx/conf.d/nginx_kolide.conf

- name: Stat cert 
  stat:
    path: /etc/nginx/ssl/kolide.key
  register: stat_cert
- shell: openssl req -new -nodes -x509 -days 3650 -subj "/C={{ cert_country }}/ST={{ cert_state }}/L={{ cert_local }}/O={{ cert_org }}/CN={{ inventory_hostname }}" -keyout /etc/nginx/ssl/kolide.key -out /etc/nginx/ssl/kolide.crt
  when: stat_cert.stat.exists == False

- name: Start Nginx service
  service:
    name: nginx
    state: restarted
    enabled: yes